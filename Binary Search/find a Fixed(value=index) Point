//Find a Fixed Point (Value equal to index) in a given sorted array (GFG- non sorted array)
//TC: O(log n)  SC: O(1)

//NOTE: lements are sorted , non repeating , starting from 1 (not Zero).

#include <iostream>
#include<algorithm>

using namespace std;

	int valueEqualToIndex(int arr[], int n) {
	 
	//    sort(arr, arr+5);
	  
    //     for(int i=0; i<n; i++){
    //         cout<<"\t"<<arr[i];
    //     }
	    int s = 0;
	    int e = n-1;
	    int mid = s+(e-s)/2;

//        cout<<"s : "<<s<<" e: "<<e<<" mid: "<<mid;

	    while(s <= e){
	        if(mid == arr[mid]){
              return mid;
	        }
	        else if(arr[mid] < mid){  //indicates element may lie in right part of array if exist
	            s = mid+1;
	        }
	        else{                       //indicates element may lie in left part of array if exist
	            e = mid-1;
	        }
	        mid = s+(e-s)/2;
//            cout<<"\ns : "<<s<<" e: "<<e<<" mid: "<<mid;
	    }
	    return -1;
	}
int main(){

    int arr[] = {-10, -5, 0, 3, 7};
    int ans = valueEqualToIndex(arr, 5);
    cout<<"ans : "<<ans;
    return 0;
}
