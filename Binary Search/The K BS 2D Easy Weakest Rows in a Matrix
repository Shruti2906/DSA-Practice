//1337. The K Weakest Rows in a Matrix - Leetcode
//tags: Binary Search, Matrix
//Easy Question
//T.C O(nlogn) S.C O(n)

class Solution {
public:

  vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        
        map<int, int> mp;
        int m = mat.size();
        int n = mat[0].size();
        
        int cnt = 0;
        int temp;
        
        vector<pair<int,int>> vec;
        
        for(int i=0; i<m; i++){
            int s = 0;
            int e = n-1;
            int mid = s+(e-s)/2;
            while(s <= e){
                if(mat[i][mid] == 1){
                    temp = mid;  
                    s = mid+1;
                }
                else{
                    e = mid-1;
                }
                mid = s+(e-s)/2;
            }
            vec.push_back({mid+1, i});
        }
        
        sort(vec.begin(),vec.end());
        vector<int> ans;
        
        int i = 1;
        for(auto it : vec){
            ans.emplace_back(it.second);
            if(i == k) break;
            i++;
        }
        return ans;
    }
};
